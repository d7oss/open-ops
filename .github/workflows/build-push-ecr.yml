name: build-push-ecr

on:
  workflow_call:
    inputs:
      aws_region:
        type: string
        required: true
      dockerfile:
        type: string
        required: false
        default: Dockerfile
      ecr_repository_name:
        type: string
        required: true
      docker_tag:
        type: string
        required: true
      build_args:
        type: string
        required: false
        default: ""
      provenance:
        type: boolean
        required: false
        default: true
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      build_args:
        required: false
    outputs:
      registry:
        description: The ECR registry URL.
        value: ${{ jobs.build-push.outputs.registry }}
      image_uri:
        description: The image URI.
        value: ${{ jobs.build-push.outputs.image_uri }}

jobs:

  build-push:
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.login_ecr.outputs.registry }}
      image_uri: ${{ steps.login_ecr.outputs.registry }}/${{ inputs.ecr_repository_name }}:${{ inputs.docker_tag }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ inputs.aws_region }}
      - name: Login to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v2
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Normalize build args
        id: build_args
        shell: python
        run: |
          import os
          input_build_args = '''${{ inputs.build_args }}'''.strip()
          secret_build_args = '''${{ secrets.build_args }}'''.strip()
          result = '\n'.join(filter(None, [input_build_args, secret_build_args]))
          with open(os.environ['GITHUB_OUTPUT'], 'a') as output:
            print('BUILD_ARGS<<EOF', file=output)
            print(result, file=output)
            print('EOF', file=output)
      - name: Build the Docker image and push to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ${{ inputs.dockerfile }}
          tags: ${{ steps.login_ecr.outputs.registry }}/${{ inputs.ecr_repository_name }}:${{ inputs.docker_tag }}
          build-args: ${{ steps.build_args.outputs.BUILD_ARGS }}
          cache-from: type=gha,scope=${{ inputs.docker_tag }}--${{ inputs.ecr_repository_name }}
          cache-to: type=gha,mode=max,scope=${{ inputs.docker_tag }}--${{ inputs.ecr_repository_name }}
          provenance: ${{ inputs.provenance }}
